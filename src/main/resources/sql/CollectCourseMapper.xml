<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xdl.ydma.dao.CollectCourseMapper">
  <resultMap id="BaseResultMap" type="cn.xdl.ydma.entity.CollectCourse">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, user_id, course_id, collect_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_course
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect_course
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.xdl.ydma.entity.CollectCourse">
    insert into collect_course (Id, user_id, course_id, 
      collect_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{collectTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.xdl.ydma.entity.CollectCourse">
    insert into collect_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xdl.ydma.entity.CollectCourse">
    update collect_course
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xdl.ydma.entity.CollectCourse">
    update collect_course
    set user_id = #{userId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      collect_time = #{collectTime,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="cn.xdl.ydma.entity.CollectCourse">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, user_id, course_id, collect_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_course
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect_course
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.xdl.ydma.entity.CollectCourse">
    insert into collect_course (Id, user_id, course_id, 
      collect_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{collectTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.xdl.ydma.entity.CollectCourse">
    insert into collect_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="collectTime != null">
        collect_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null">
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xdl.ydma.entity.CollectCourse">
    update collect_course
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null">
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xdl.ydma.entity.CollectCourse">
    update collect_course
    set user_id = #{userId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      collect_time = #{collectTime,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>