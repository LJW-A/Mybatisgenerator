<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xdl.ydma.dao.NoteLikeMapper">
  <resultMap id="BaseResultMap" type="cn.xdl.ydma.entity.NoteLike">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="note_id" jdbcType="INTEGER" property="noteId" />
    <result column="like_time" jdbcType="TIMESTAMP" property="likeTime" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, user_id, note_id, like_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from note_like
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from note_like
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.xdl.ydma.entity.NoteLike">
    insert into note_like (Id, user_id, note_id, 
      like_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{noteId,jdbcType=INTEGER}, 
      #{likeTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.xdl.ydma.entity.NoteLike">
    insert into note_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="noteId != null">
        note_id,
      </if>
      <if test="likeTime != null">
        like_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="noteId != null">
        #{noteId,jdbcType=INTEGER},
      </if>
      <if test="likeTime != null">
        #{likeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xdl.ydma.entity.NoteLike">
    update note_like
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="noteId != null">
        note_id = #{noteId,jdbcType=INTEGER},
      </if>
      <if test="likeTime != null">
        like_time = #{likeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xdl.ydma.entity.NoteLike">
    update note_like
    set user_id = #{userId,jdbcType=INTEGER},
      note_id = #{noteId,jdbcType=INTEGER},
      like_time = #{likeTime,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="cn.xdl.ydma.entity.NoteLike">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="note_id" jdbcType="INTEGER" property="noteId" />
    <result column="like_time" jdbcType="TIMESTAMP" property="likeTime" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, user_id, note_id, like_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from note_like
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from note_like
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.xdl.ydma.entity.NoteLike">
    insert into note_like (Id, user_id, note_id, 
      like_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{noteId,jdbcType=INTEGER}, 
      #{likeTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.xdl.ydma.entity.NoteLike">
    insert into note_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="noteId != null">
        note_id,
      </if>
      <if test="likeTime != null">
        like_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="noteId != null">
        #{noteId,jdbcType=INTEGER},
      </if>
      <if test="likeTime != null">
        #{likeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xdl.ydma.entity.NoteLike">
    update note_like
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="noteId != null">
        note_id = #{noteId,jdbcType=INTEGER},
      </if>
      <if test="likeTime != null">
        like_time = #{likeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xdl.ydma.entity.NoteLike">
    update note_like
    set user_id = #{userId,jdbcType=INTEGER},
      note_id = #{noteId,jdbcType=INTEGER},
      like_time = #{likeTime,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>